<script lang="ts">
  import { FileDetails } from 'svelte-zoo'
  import language_slot_src from '$site/LanguageSlot.svelte?raw'
  import options_src from '$site/options.ts?raw'
</script>

## Min/max number of selected options

`maxSelect={5}` prevents users from selecting more than 5 options.

```svelte example stackblitz id="languages"
<script lang="ts">
  import MultiSelect from '$lib'
  import { languages } from '$site/options'
  import { LanguageSlot } from '$site'
</script>

<MultiSelect
  options={languages}
  maxSelect={5}
  placeholder="What languages do you know?"
  let:option
>
  <LanguageSlot {option} />
</MultiSelect>
```

<FileDetails files={[
  { title: `LanguageSlot.svelte`, content: language_slot_src },
  { title: `options.ts`, content: options_src },
]} />

When setting an integer value for `maxSelect` Multiselect will

- close options dropdown when reaching `maxSelect` items
- prevent users from selecting more options after reaching `maxSelect` items

<br />

`required={3}` means users have to pick at least 3 options before they can submit a form.

```svelte example stackblitz
<script lang="ts">
  import MultiSelect from '$lib'

  function handle_submit(event: SubmitEvent) {
    const form_data = new FormData(event.target)
    alert('form data received by submit handler:\n' + JSON.stringify(...form_data))
  }
</script>

<form on:submit={handle_submit}>
  <MultiSelect options={[1, 2, 3, 4, 5, 6]} required={3} name="numbers" sortSelected />
  <button>submit</button>
</form>
```

<br />

Of course, you can combine `maxSelect={n}` and `required={m}` where `n>=m`.

```svelte example stackblitz
<script lang="ts">
  import MultiSelect from '$lib'

  function handle_submit(event: SubmitEvent) {
    const form_data = new FormData(event.target)
    alert('form data received by submit handler:\n' + JSON.stringify(...form_data))
  }
</script>

<form on:submit={handle_submit}>
  <MultiSelect
    options={[1, 2, 3, 4, 5, 6]}
    required={2}
    maxSelect={3}
    name="numbers"
    sortSelected
  />
  <button>submit</button>
</form>
```
