<script>
  import MultiSelect from '$lib'
  import { foods, languages } from '$src/options'
  import LanguageSlot from '$src/components/LanguageSlot.svelte'

  // make some options pre-selected
  let selected = 'üçá Grapes, üçà Melon, üçâ Watermelon, üçä Tangerine'.split(', ')
  let selected_append = ['Haskell', 'TypeScript']
  let selected_empty = []
</script>

<label for="foods">Allow Custom User Input</label>

`allowUserOptions={true}` means users can enter custom options by entering text and hitting enter.

<MultiSelect id="foods" options={foods} allowUserOptions={true} bind:selected />

```svelte
<MultiSelect
  options={foods}
  allowUserOptions={true}
/>
```

<br />
<br />
<br />

<label for="languages">Append User Input</label>

`allowUserOptions="append"` is similar to `true` but also adds user-entered custom options to the dropdown list. They'll remain there for re-selection should the user remove their custom option from the list of selected items.

<MultiSelect
  id="languages"
  options={languages}
  allowUserOptions="append"
  bind:selected={selected_append}
  addOptionMsg="True polyglots can enter custom languages!"
>
  <LanguageSlot let:option {option} slot="selected" />
  <LanguageSlot let:option {option} slot="option" />
</MultiSelect>

```svelte
<MultiSelect
  id="languages"
  options={languages}
  allowUserOptions="append"
  addOptionMsg="True polyglots can enter custom languages!"
>
  <LanguageSlot let:option {option} slot="selected" />
  <LanguageSlot let:option {option} slot="option" />
</MultiSelect>
```

<br />
<br />
<br />

<label for="languages">Start empty</label>

Starting with no options and letting the user populate their selection from scratch.

{#if selected_empty?.length > 0}
  <pre><code>selected = {JSON.stringify(selected_empty)}</code></pre>
{/if}

<MultiSelect
  id="no-default-options"
  allowUserOptions="append"
  bind:selected={selected_empty}
  noOptionsMsg=""
/>

```svelte
<MultiSelect
  id="no-default-options"
  allowUserOptions="append"
  bind:selected={selected_empty}
  noOptionsMsg=""
/>
```
