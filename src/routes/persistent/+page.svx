<script>
  import hljs from 'highlight.js/lib/common'
  import 'highlight.js/styles/vs2015.css'

  const glob = import.meta.glob('/src/stores.ts', { eager: true, as: 'raw' })
  const store_code = glob['/src/stores.ts']
</script>

## Page-Reload Persistent MultiSelect

`language_store` is bound to the browser's `sessionStorage`. This example shows that MultiSelect retains its `selected` state on page reload correctly.

<br />

```svelte example id="languages"
<script>
  import MultiSelect from '$lib'
  import { languages } from '$src/options'
  import LanguageSlot from '$src/components/LanguageSlot.svelte'
  import { language_store } from '$src/stores'
</script>

<MultiSelect
  options={languages}
  placeholder="What languages do you know?"
  bind:selected={$language_store}
>
  <LanguageSlot let:option {option} slot="selected" />
</MultiSelect>
```

where `language_store` is a Svelte `writable` with custom initialization logic and a wrapper around `set` method to update `sessionStorage`:

<pre><code>{@html hljs.highlight(store_code, { language: 'typescript' }).value}</code></pre>
